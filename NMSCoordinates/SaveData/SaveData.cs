// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using NMSCoordinates.SaveData;
//
//    var saveData = SaveData.FromJson(jsonString);

namespace NMSCoordinates.SaveData
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class GameSaveData
    {
        [JsonProperty("Version")]
        public long Version { get; set; }

        [JsonProperty("Platform")]
        public string Platform { get; set; }

        [JsonProperty("PlayerStateData")]
        public PlayerStateData PlayerStateData { get; set; }

        [JsonProperty("SpawnStateData")]
        public SpawnStateData SpawnStateData { get; set; }

        [JsonProperty("GameKnowledgeData")]
        public GameKnowledgeData GameKnowledgeData { get; set; }

        [JsonProperty("DiscoveryManagerData")]
        public DiscoveryManagerData DiscoveryManagerData { get; set; }
    }

    public partial class DiscoveryManagerData
    {
        [JsonProperty("DiscoveryData-v1")]
        public DiscoveryDataV1 DiscoveryDataV1 { get; set; }
    }

    public partial class DiscoveryDataV1
    {
        [JsonProperty("ReserveStore")]
        public long ReserveStore { get; set; }

        [JsonProperty("ReserveManaged")]
        public long ReserveManaged { get; set; }

        [JsonProperty("Store")]
        public Store Store { get; set; }

        [JsonProperty("Available")]
        public List<dynamic> Available { get; set; }

        [JsonProperty("Enqueued")]
        public List<Enqueued> Enqueued { get; set; }
    }

    public partial class Enqueued
    {
        [JsonProperty("TSrec")]
        public long TSrec { get; set; }

        [JsonProperty("DD")]
        public Dd Dd { get; set; }
    }

    public partial class Dd
    {
        [JsonProperty("UA")]
        public GalacticAddressElement Ua { get; set; }

        [JsonProperty("DT")]
        public string Dt { get; set; }

        [JsonProperty("VP")]
        public List<GalacticAddressElement> Vp { get; set; }
    }

    public partial class Store
    {
        [JsonProperty("Record")]
        public List<Record> Record { get; set; }
    }

    public partial class Record
    {
        [JsonProperty("DD")]
        public Dd Dd { get; set; }

        [JsonProperty("DM")]
        public Dm Dm { get; set; }

        [JsonProperty("OWS")]
        public SenderData Ows { get; set; }

        [JsonProperty("FL", NullValueHandling = NullValueHandling.Ignore)]
        public Fl Fl { get; set; }

        [JsonProperty("RID", NullValueHandling = NullValueHandling.Ignore)]
        public string Rid { get; set; }

        [JsonProperty("PTK", NullValueHandling = NullValueHandling.Ignore)]
        public string Ptk { get; set; }
    }

    public partial class Dm
    {
        [JsonProperty("CN", NullValueHandling = NullValueHandling.Ignore)]
        public string Cn { get; set; }
    }

    public partial class Fl
    {
        [JsonProperty("C", NullValueHandling = NullValueHandling.Ignore)]
        public long? C { get; set; }

        [JsonProperty("BLANK", NullValueHandling = NullValueHandling.Ignore)]
        public long? Blank { get; set; }

        [JsonProperty("H", NullValueHandling = NullValueHandling.Ignore)]
        public long? H { get; set; }
    }

    public partial class SenderData
    {
        [JsonProperty("LID")]
        public string Lid { get; set; }

        [JsonProperty("UID")]
        public string Uid { get; set; }

        [JsonProperty("USN")]
        public string Usn { get; set; }

        [JsonProperty("PTK")]
        public string Ptk { get; set; }

        [JsonProperty("TS")]
        public long Ts { get; set; }
    }

    public partial class GameKnowledgeData
    {
    }

    public partial class PlayerStateData
    {
        [JsonProperty("UniverseAddress")]
        public UniverseAddress UniverseAddress { get; set; }

        [JsonProperty("PreviousUniverseAddress")]
        public UniverseAddress PreviousUniverseAddress { get; set; }

        [JsonProperty("HomeRealityIteration")]
        public long HomeRealityIteration { get; set; }

        [JsonProperty("Inventory")]
        public Chest10Inventory Inventory { get; set; }

        [JsonProperty("Inventory_TechOnly")]
        public Chest10Inventory InventoryTechOnly { get; set; }

        [JsonProperty("Inventory_Cargo")]
        public Chest10Inventory InventoryCargo { get; set; }

        [JsonProperty("ShipInventory")]
        public Chest10Inventory ShipInventory { get; set; }

        [JsonProperty("WeaponInventory")]
        public Chest10Inventory WeaponInventory { get; set; }

        [JsonProperty("MultiTools")]
        public List<MultiTool> MultiTools { get; set; }

        [JsonProperty("ActiveMultioolIndex")]
        public long ActiveMultioolIndex { get; set; }

        [JsonProperty("ByteBeatLibrary")]
        public ByteBeatLibrary ByteBeatLibrary { get; set; }

        [JsonProperty("Pets")]
        public List<Egg> Pets { get; set; }

        [JsonProperty("Eggs")]
        public List<Egg> Eggs { get; set; }

        [JsonProperty("PetAccessoryCustomisation")]
        public List<PetAccessoryCustomisation> PetAccessoryCustomisation { get; set; }

        [JsonProperty("UnlockedPetSlots")]
        public List<bool> UnlockedPetSlots { get; set; }

        [JsonProperty("GraveInventory")]
        public Chest10Inventory GraveInventory { get; set; }

        [JsonProperty("SpawnGrave")]
        public bool SpawnGrave { get; set; }

        [JsonProperty("SpaceGrave")]
        public bool SpaceGrave { get; set; }

        [JsonProperty("GraveUniverseAddress")]
        public UniverseAddress GraveUniverseAddress { get; set; }

        [JsonProperty("GravePosition")]
        public List<double> GravePosition { get; set; }

        [JsonProperty("GraveMatrixLookAt")]
        public List<double> GraveMatrixLookAt { get; set; }

        [JsonProperty("GraveMatrixUp")]
        public List<double> GraveMatrixUp { get; set; }

        [JsonProperty("ShipLayout")]
        public Chest10Layout ShipLayout { get; set; }

        [JsonProperty("WeaponLayout")]
        public Chest10Layout WeaponLayout { get; set; }

        [JsonProperty("CurrentShip")]
        public CurrentFreighter CurrentShip { get; set; }

        [JsonProperty("CurrentWeapon")]
        public CurrentWeapon CurrentWeapon { get; set; }

        [JsonProperty("KnownTech")]
        public List<string> KnownTech { get; set; }

        [JsonProperty("KnownProducts")]
        public List<string> KnownProducts { get; set; }

        [JsonProperty("KnownSpecials")]
        public List<string> KnownSpecials { get; set; }

        [JsonProperty("KnownRefinerRecipes")]
        public List<dynamic> KnownRefinerRecipes { get; set; }

        [JsonProperty("KnownWords")]
        public List<dynamic> KnownWords { get; set; }

        [JsonProperty("KnownWordGroups")]
        public List<KnownWordGroup> KnownWordGroups { get; set; }

        [JsonProperty("MissionProgress")]
        public List<MissionProgress> MissionProgress { get; set; }

        [JsonProperty("PostMissionIndex")]
        public long PostMissionIndex { get; set; }

        [JsonProperty("CurrentMissionID")]
        public string CurrentMissionId { get; set; }

        [JsonProperty("CurrentMissionSeed")]
        public long CurrentMissionSeed { get; set; }

        [JsonProperty("PreviousMissionID")]
        public string PreviousMissionId { get; set; }

        [JsonProperty("PreviousMissionSeed")]
        public long PreviousMissionSeed { get; set; }

        [JsonProperty("MissionVersion")]
        public long MissionVersion { get; set; }

        [JsonProperty("MissionRecurrences")]
        public List<MissionRecurrence> MissionRecurrences { get; set; }

        [JsonProperty("HoloExplorerInteraction")]
        public HoloInteraction HoloExplorerInteraction { get; set; }

        [JsonProperty("HoloScepticInteraction")]
        public HoloInteraction HoloScepticInteraction { get; set; }

        [JsonProperty("HoloNooneInteraction")]
        public HoloInteraction HoloNooneInteraction { get; set; }

        [JsonProperty("Health")]
        public long Health { get; set; }

        [JsonProperty("ShipHealth")]
        public long ShipHealth { get; set; }

        [JsonProperty("Shield")]
        public long Shield { get; set; }

        [JsonProperty("ShipShield")]
        public long ShipShield { get; set; }

        [JsonProperty("Energy")]
        public long Energy { get; set; }

        [JsonProperty("Units")]
        public long Units { get; set; }

        [JsonProperty("Nanites")]
        public long Nanites { get; set; }

        [JsonProperty("Specials")]
        public long Specials { get; set; }

        [JsonProperty("ThirdPersonShip")]
        public bool ThirdPersonShip { get; set; }

        [JsonProperty("TimeAlive")]
        public long TimeAlive { get; set; }

        [JsonProperty("TotalPlayTime")]
        public long TotalPlayTime { get; set; }

        [JsonProperty("MarkerStack")]
        public List<MarkerStack> MarkerStack { get; set; }

        [JsonProperty("NewMPMarkerStack")]
        public List<dynamic> NewMpMarkerStack { get; set; }

        [JsonProperty("SurveyedEventPositions")]
        public List<dynamic> SurveyedEventPositions { get; set; }

        [JsonProperty("NextSurveyedEventPositionIndex")]
        public long NextSurveyedEventPositionIndex { get; set; }

        [JsonProperty("Stats")]
        public List<PlayerStateDataStat> Stats { get; set; }

        [JsonProperty("TelemetryStats")]
        public List<TelemetryStat> TelemetryStats { get; set; }

        [JsonProperty("StoredInteractions")]
        public List<StoredInteraction> StoredInteractions { get; set; }

        [JsonProperty("MaintenanceInteractions")]
        public List<MaintenanceInteraction> MaintenanceInteractions { get; set; }

        [JsonProperty("PersonalMaintenanceInteractions")]
        public List<MaintenanceInteraction> PersonalMaintenanceInteractions { get; set; }

        [JsonProperty("VisitedSystems")]
        public List<long> VisitedSystems { get; set; }

        [JsonProperty("Hazard")]
        public List<decimal> Hazard { get; set; }

        [JsonProperty("BoltAmmo")]
        public long BoltAmmo { get; set; }

        [JsonProperty("ScatterAmmo")]
        public long ScatterAmmo { get; set; }

        [JsonProperty("PulseAmmo")]
        public long PulseAmmo { get; set; }

        [JsonProperty("LaserAmmo")]
        public long LaserAmmo { get; set; }

        [JsonProperty("FirstSpawnPosition")]
        public List<decimal> FirstSpawnPosition { get; set; }

        [JsonProperty("SavedInteractionIndicies")]
        public List<SavedInteractionIndicy> SavedInteractionIndicies { get; set; }

        [JsonProperty("SavedInteractionDialogTable")]
        public List<SavedInteractionDialogTable> SavedInteractionDialogTable { get; set; }

        [JsonProperty("InteractionProgressTable")]
        public List<dynamic> InteractionProgressTable { get; set; }

        [JsonProperty("AtlasStationAdressData")]
        public List<UniverseAddress> AtlasStationAdressData { get; set; }

        [JsonProperty("NewAtlasStationAdressData")]
        public List<UniverseAddress> NewAtlasStationAdressData { get; set; }

        [JsonProperty("VisitedAtlasStationsData")]
        public List<dynamic> VisitedAtlasStationsData { get; set; }

        [JsonProperty("FirstAtlasStationDiscovered")]
        public bool FirstAtlasStationDiscovered { get; set; }

        [JsonProperty("UsesThirdPersonCharacterCam")]
        public bool UsesThirdPersonCharacterCam { get; set; }

        [JsonProperty("ProgressionLevel")]
        public long ProgressionLevel { get; set; }

        [JsonProperty("ProcTechIndex")]
        public long ProcTechIndex { get; set; }

        [JsonProperty("IsNew")]
        public bool IsNew { get; set; }

        [JsonProperty("UseSmallerBlackholeJumps")]
        public bool UseSmallerBlackholeJumps { get; set; }

        [JsonProperty("UsedEntitlements")]
        public List<dynamic> UsedEntitlements { get; set; }

        [JsonProperty("PlanetPositions")]
        public List<List<decimal>> PlanetPositions { get; set; }

        [JsonProperty("PlanetSeeds")]
        public List<List<Seed>> PlanetSeeds { get; set; }

        [JsonProperty("PrimaryPlanet")]
        public long PrimaryPlanet { get; set; }

        [JsonProperty("TimeLastSpaceBattle")]
        public long TimeLastSpaceBattle { get; set; }

        [JsonProperty("WarpsLastSpaceBattle")]
        public long WarpsLastSpaceBattle { get; set; }

        [JsonProperty("ActiveSpaceBattleUA")]
        public long ActiveSpaceBattleUa { get; set; }

        [JsonProperty("TimeLastMiniStation")]
        public long TimeLastMiniStation { get; set; }

        [JsonProperty("WarpsLastMiniStation")]
        public long WarpsLastMiniStation { get; set; }

        [JsonProperty("MiniStationUA")]
        public string MiniStationUa { get; set; }

        [JsonProperty("AnomalyPositionOverride")]
        public List<decimal> AnomalyPositionOverride { get; set; }

        [JsonProperty("GameStartAddress1")]
        public UniverseAddress GameStartAddress1 { get; set; }

        [JsonProperty("GameStartAddress2")]
        public UniverseAddress GameStartAddress2 { get; set; }

        [JsonProperty("GalacticMapRequests")]
        public List<bool> GalacticMapRequests { get; set; }

        [JsonProperty("FirstShipPosition")]
        public List<decimal> FirstShipPosition { get; set; }

        [JsonProperty("HazardTimeAlive")]
        public long HazardTimeAlive { get; set; }

        [JsonProperty("RevealBlackHoles")]
        public bool RevealBlackHoles { get; set; }

        [JsonProperty("CurrentFreighterHomeSystemSeed")]
        public List<Seed> CurrentFreighterHomeSystemSeed { get; set; }

        [JsonProperty("CurrentFreighter")]
        public CurrentFreighter CurrentFreighter { get; set; }

        [JsonProperty("FreighterLayout")]
        public Chest10Layout FreighterLayout { get; set; }

        [JsonProperty("FreighterInventory")]
        public Chest10Inventory FreighterInventory { get; set; }

        [JsonProperty("FreighterInventory_TechOnly")]
        public Chest10Inventory FreighterInventoryTechOnly { get; set; }

        [JsonProperty("FreighterUniverseAddress")]
        public UniverseAddress FreighterUniverseAddress { get; set; }

        [JsonProperty("FreighterMatrixAt")]
        public List<double> FreighterMatrixAt { get; set; }

        [JsonProperty("FreighterMatrixUp")]
        public List<double> FreighterMatrixUp { get; set; }

        [JsonProperty("FreighterMatrixPos")]
        public List<double> FreighterMatrixPos { get; set; }

        [JsonProperty("7?0")]
        public List<bool> The70 { get; set; }

        [JsonProperty("S5O")]
        public List<S5O> S5O { get; set; }

        [JsonProperty("qJ7")]
        public List<dynamic> QJ7 { get; set; }

        [JsonProperty("BaseBuildingObjects")]
        public List<Object> BaseBuildingObjects { get; set; }

        [JsonProperty("TerrainEditData")]
        public TerrainEditData TerrainEditData { get; set; }

        [JsonProperty("NPCWorkers")]
        public List<NpcWorker> NpcWorkers { get; set; }

        [JsonProperty("PersistentPlayerBases")]
        public List<PersistentPlayerBasis> PersistentPlayerBases { get; set; }

        [JsonProperty("TeleportEndpoints")]
        public List<OtherSideOfPortalReturnBase> TeleportEndpoints { get; set; }

        [JsonProperty("Chest1Layout")]
        public Chest10Layout Chest1Layout { get; set; }

        [JsonProperty("Chest1Inventory")]
        public Chest10Inventory Chest1Inventory { get; set; }

        [JsonProperty("Chest2Layout")]
        public Chest10Layout Chest2Layout { get; set; }

        [JsonProperty("Chest2Inventory")]
        public Chest10Inventory Chest2Inventory { get; set; }

        [JsonProperty("Chest3Layout")]
        public Chest10Layout Chest3Layout { get; set; }

        [JsonProperty("Chest3Inventory")]
        public Chest10Inventory Chest3Inventory { get; set; }

        [JsonProperty("Chest4Layout")]
        public Chest10Layout Chest4Layout { get; set; }

        [JsonProperty("Chest4Inventory")]
        public Chest10Inventory Chest4Inventory { get; set; }

        [JsonProperty("Chest5Layout")]
        public Chest10Layout Chest5Layout { get; set; }

        [JsonProperty("Chest5Inventory")]
        public Chest10Inventory Chest5Inventory { get; set; }

        [JsonProperty("Chest6Layout")]
        public Chest10Layout Chest6Layout { get; set; }

        [JsonProperty("Chest6Inventory")]
        public Chest10Inventory Chest6Inventory { get; set; }

        [JsonProperty("Chest7Layout")]
        public Chest10Layout Chest7Layout { get; set; }

        [JsonProperty("Chest7Inventory")]
        public Chest10Inventory Chest7Inventory { get; set; }

        [JsonProperty("Chest8Layout")]
        public Chest10Layout Chest8Layout { get; set; }

        [JsonProperty("Chest8Inventory")]
        public Chest10Inventory Chest8Inventory { get; set; }

        [JsonProperty("Chest9Layout")]
        public Chest10Layout Chest9Layout { get; set; }

        [JsonProperty("Chest9Inventory")]
        public Chest10Inventory Chest9Inventory { get; set; }

        [JsonProperty("Chest10Layout")]
        public Chest10Layout Chest10Layout { get; set; }

        [JsonProperty("Chest10Inventory")]
        public Chest10Inventory Chest10Inventory { get; set; }

        [JsonProperty("ChestMagicLayout")]
        public Chest10Layout ChestMagicLayout { get; set; }

        [JsonProperty("ChestMagicInventory")]
        public Chest10Inventory ChestMagicInventory { get; set; }

        [JsonProperty("ChestMagic2Layout")]
        public Chest10Layout ChestMagic2Layout { get; set; }

        [JsonProperty("ChestMagic2Inventory")]
        public Chest10Inventory ChestMagic2Inventory { get; set; }

        [JsonProperty("CookingIngredientsLayout")]
        public Chest10Layout CookingIngredientsLayout { get; set; }

        [JsonProperty("CookingIngredientsInventory")]
        public Chest10Inventory CookingIngredientsInventory { get; set; }

        [JsonProperty("UaL")]
        public Chest10Layout UaL { get; set; }

        [JsonProperty("FireteamSessionCount")]
        public Chest10Inventory FireteamSessionCount { get; set; }

        [JsonProperty("CurrentFreighterNPC")]
        public CurrentFreighter CurrentFreighterNpc { get; set; }

        [JsonProperty("VehicleOwnership")]
        public List<VehicleOwnership> VehicleOwnership { get; set; }

        [JsonProperty("PrimaryVehicle")]
        public long PrimaryVehicle { get; set; }

        [JsonProperty("ShipOwnership")]
        public List<ShipOwnership> ShipOwnership { get; set; }

        [JsonProperty("PrimaryShip")]
        public long PrimaryShip { get; set; }

        [JsonProperty("MultiShipEnabled")]
        public bool MultiShipEnabled { get; set; }

        [JsonProperty("Agx")]
        public bool Agx { get; set; }

        [JsonProperty("PlayerFreighterName")]
        public string PlayerFreighterName { get; set; }

        [JsonProperty("StartGameShipPosition")]
        public List<decimal> StartGameShipPosition { get; set; }

        [JsonProperty("ShipNeedsTerrainPositioning")]
        public bool ShipNeedsTerrainPositioning { get; set; }

        [JsonProperty("TradingSupplyDataIndex")]
        public long TradingSupplyDataIndex { get; set; }

        [JsonProperty("TradingSupplyData")]
        public List<TradingSupplyDatum> TradingSupplyData { get; set; }

        [JsonProperty("LastPortal")]
        public List<dynamic> LastPortal { get; set; }

        [JsonProperty("VisitedPortal")]
        public VisitedPortal VisitedPortal { get; set; }

        [JsonProperty("KnownPortalRunes")]
        public long KnownPortalRunes { get; set; }

        [JsonProperty("OnOtherSideOfPortal")]
        public bool OnOtherSideOfPortal { get; set; }

        [JsonProperty("OtherSideOfPortalReturnBase")]
        public OtherSideOfPortalReturnBase OtherSideOfPortalReturnBase { get; set; }

        [JsonProperty("PortalMarkerPosition_Local")]
        public List<double> PortalMarkerPositionLocal { get; set; }

        [JsonProperty("PortalMarkerPosition_Offset")]
        public List<decimal> PortalMarkerPositionOffset { get; set; }

        [JsonProperty("StartingPrimaryWeapon")]
        public StartingAryWeapon StartingPrimaryWeapon { get; set; }

        [JsonProperty("StartingSecondaryWeapon")]
        public StartingAryWeapon StartingSecondaryWeapon { get; set; }

        [JsonProperty("CharacterCustomisationData")]
        public List<Datum> CharacterCustomisationData { get; set; }

        [JsonProperty("ShipUsesLegacyColours")]
        public List<bool> ShipUsesLegacyColours { get; set; }

        [JsonProperty("Outfits")]
        public List<Outfit> Outfits { get; set; }

        [JsonProperty("JetpackEffect")]
        public string JetpackEffect { get; set; }

        [JsonProperty("FleetSeed")]
        public List<Seed> FleetSeed { get; set; }

        [JsonProperty("FleetFrigates")]
        public List<FleetFrigate> FleetFrigates { get; set; }

        [JsonProperty("FleetExpeditions")]
        public List<dynamic> FleetExpeditions { get; set; }

        [JsonProperty("ExpeditionSeedsSelectedToday")]
        public List<dynamic> ExpeditionSeedsSelectedToday { get; set; }

        [JsonProperty("LastKnownDay")]
        public long LastKnownDay { get; set; }

        [JsonProperty("SunTimer")]
        public long SunTimer { get; set; }

        [JsonProperty("MultiplayerLobbyID")]
        public long MultiplayerLobbyId { get; set; }

        [JsonProperty("MultiplayerUA")]
        public UniverseAddress MultiplayerUa { get; set; }

        [JsonProperty("MultiplayerSpawn")]
        public SpawnStateData MultiplayerSpawn { get; set; }

        [JsonProperty("RepairTechBuffer")]
        public List<RepairTechBuffer> RepairTechBuffer { get; set; }

        [JsonProperty("MultiplayerPrivileges")]
        public long MultiplayerPrivileges { get; set; }

        [JsonProperty("HotActions")]
        public List<HotAction> HotActions { get; set; }

        [JsonProperty("LastUABeforePortalWarp")]
        public string LastUaBeforePortalWarp { get; set; }

        [JsonProperty("StoryPortalSeed")]
        public long StoryPortalSeed { get; set; }

        [JsonProperty("ShopNumber")]
        public long ShopNumber { get; set; }

        [JsonProperty("ShopTier")]
        public long ShopTier { get; set; }

        [JsonProperty("HasAccessToNexus")]
        public bool HasAccessToNexus { get; set; }

        [JsonProperty("NexusUniverseAddress")]
        public UniverseAddress NexusUniverseAddress { get; set; }

        [JsonProperty("NexusMatrixAt")]
        public List<decimal> NexusMatrixAt { get; set; }

        [JsonProperty("NexusMatrixUp")]
        public List<decimal> NexusMatrixUp { get; set; }

        [JsonProperty("NexusMatrixPos")]
        public List<decimal> NexusMatrixPos { get; set; }

        [JsonProperty("PhotoModeSettings")]
        public PhotoModeSettings PhotoModeSettings { get; set; }

        [JsonProperty("BannerIcon")]
        public long BannerIcon { get; set; }

        [JsonProperty("BannerMainColour")]
        public long BannerMainColour { get; set; }

        [JsonProperty("BannerBackgroundColour")]
        public long BannerBackgroundColour { get; set; }

        [JsonProperty("BannerTitleId")]
        public string BannerTitleId { get; set; }

        [JsonProperty("TelemetryUploadVersion")]
        public long TelemetryUploadVersion { get; set; }

        [JsonProperty("UsesThirdPersonVehicleCam")]
        public bool UsesThirdPersonVehicleCam { get; set; }

        [JsonProperty("VRCameraOffset")]
        public decimal VrCameraOffset { get; set; }

        [JsonProperty("Rol")]
        public Rol Rol { get; set; }

        [JsonProperty("SeasonState")]
        public SeasonState SeasonState { get; set; }

        [JsonProperty("RestartAllInactiveSeasonalMissions")]
        public bool RestartAllInactiveSeasonalMissions { get; set; }

        [JsonProperty("RedeemedSeasonRewards")]
        public List<dynamic> RedeemedSeasonRewards { get; set; }

        [JsonProperty("RedeemedTwitchRewards")]
        public List<dynamic> RedeemedTwitchRewards { get; set; }

        [JsonProperty("GQA")]
        public List<Gqa> Gqa { get; set; }

        [JsonProperty("LsP")]
        public long LsP { get; set; }

        [JsonProperty("Sd6")]
        public bool Sd6 { get; set; }
    }

    public partial class UniverseAddress
    {
        [JsonProperty("RealityIndex")]
        public long RealityIndex { get; set; }

        [JsonProperty("GalacticAddress")]
        public GalacticAddress GalacticAddress { get; set; }
    }

    public partial class GalacticAddress
    {
        [JsonProperty("VoxelX")]
        public long VoxelX { get; set; }

        [JsonProperty("VoxelY")]
        public long VoxelY { get; set; }

        [JsonProperty("VoxelZ")]
        public long VoxelZ { get; set; }

        [JsonProperty("SolarSystemIndex")]
        public long SolarSystemIndex { get; set; }

        [JsonProperty("PlanetIndex")]
        public long PlanetIndex { get; set; }
    }

    public partial class Object
    {
        [JsonProperty("Timestamp")]
        public long Timestamp { get; set; }

        [JsonProperty("ObjectID")]
        public string ObjectId { get; set; }

        [JsonProperty("GalacticAddress", NullValueHandling = NullValueHandling.Ignore)]
        public GalacticAddressElement? GalacticAddress { get; set; }

        [JsonProperty("RegionSeed", NullValueHandling = NullValueHandling.Ignore)]
        public string RegionSeed { get; set; }

        [JsonProperty("UserData")]
        public long UserData { get; set; }

        [JsonProperty("Position")]
        public List<double> Position { get; set; }

        [JsonProperty("Up")]
        public List<double> Up { get; set; }

        [JsonProperty("At")]
        public List<double> At { get; set; }
    }

    public partial class ByteBeatLibrary
    {
        [JsonProperty("MySongs")]
        public List<MySong> MySongs { get; set; }

        [JsonProperty("Playlist")]
        public List<string> Playlist { get; set; }

        [JsonProperty("Shuffle")]
        public bool Shuffle { get; set; }

        [JsonProperty("AutoplayOnFoot")]
        public bool AutoplayOnFoot { get; set; }

        [JsonProperty("AutoplayInShip")]
        public bool AutoplayInShip { get; set; }

        [JsonProperty("AutoplayInVehicle")]
        public bool AutoplayInVehicle { get; set; }
    }

    public partial class MySong
    {
        [JsonProperty("Id")]
        public string Id { get; set; }

        [JsonProperty("Wv?")]
        public string Wv { get; set; }

        [JsonProperty("Name")]
        public string Name { get; set; }

        [JsonProperty("ATe")]
        public string ATe { get; set; }

        [JsonProperty("m7b")]
        public string M7B { get; set; }

        [JsonProperty("4ha")]
        public string The4Ha { get; set; }

        [JsonProperty("d2f")]
        public string D2F { get; set; }

        [JsonProperty("Data")]
        public List<string> Data { get; set; }
    }

    public partial class Datum
    {
        [JsonProperty("SelectedPreset")]
        public string SelectedPreset { get; set; }

        [JsonProperty("CustomData")]
        public Outfit CustomData { get; set; }
    }

    public partial class Outfit
    {
        [JsonProperty("DescriptorGroups")]
        public List<string> DescriptorGroups { get; set; }

        [JsonProperty("Colours")]
        public List<Colour> Colours { get; set; }

        [JsonProperty("TextureOptions")]
        public List<TextureOption> TextureOptions { get; set; }

        [JsonProperty("BoneScales")]
        public List<BoneScale> BoneScales { get; set; }

        [JsonProperty("Scale")]
        public decimal Scale { get; set; }
    }

    public partial class BoneScale
    {
        [JsonProperty("BoneName")]
        public string BoneName { get; set; }

        [JsonProperty("Scale")]
        public double Scale { get; set; }
    }

    public partial class Colour
    {
        [JsonProperty("Palette")]
        public Palette Palette { get; set; }

        [JsonProperty("Colour")]
        public List<double> ColourColour { get; set; }
    }

    public partial class Palette
    {
        [JsonProperty("Palette")]
        public string PalettePalette { get; set; }

        [JsonProperty("ColourAlt")]
        public string ColourAlt { get; set; }
    }

    public partial class TextureOption
    {
        [JsonProperty("TextureOptionGroupName")]
        public string TextureOptionGroupName { get; set; }

        [JsonProperty("TextureOptionName")]
        public string TextureOptionName { get; set; }
    }

    public partial class Chest10Inventory
    {
        [JsonProperty("Slots")]
        public List<Slot> Slots { get; set; }

        [JsonProperty("ValidSlotIndices")]
        public List<Index> ValidSlotIndices { get; set; }

        [JsonProperty("Class")]
        public Class Class { get; set; }

        [JsonProperty("SubstanceMaxStorageMultiplier")]
        public long SubstanceMaxStorageMultiplier { get; set; }

        [JsonProperty("ProductMaxStorageMultiplier")]
        public long ProductMaxStorageMultiplier { get; set; }

        [JsonProperty("BaseStatValues")]
        public List<BaseStatValue> BaseStatValues { get; set; }

        [JsonProperty("SpecialSlots")]
        public List<dynamic> SpecialSlots { get; set; }

        [JsonProperty("Width")]
        public long Width { get; set; }

        [JsonProperty("Height")]
        public long Height { get; set; }

        [JsonProperty("IsCool")]
        public bool IsCool { get; set; }

        [JsonProperty("Name")]
        public string Name { get; set; }

        [JsonProperty("Version")]
        public long Version { get; set; }
    }

    public partial class BaseStatValue
    {
        [JsonProperty("BaseStatID")]
        public string BaseStatId { get; set; }

        [JsonProperty("Value")]
        public double Value { get; set; }
    }

    public partial class Class
    {
        [JsonProperty("InventoryClass")]
        public string InventoryClass { get; set; }
    }

    public partial class Slot
    {
        [JsonProperty("Type")]
        public TypeClass Type { get; set; }

        [JsonProperty("Id")]
        public string Id { get; set; }

        [JsonProperty("Amount")]
        public long Amount { get; set; }

        [JsonProperty("MaxAmount")]
        public long MaxAmount { get; set; }

        [JsonProperty("DamageFactor")]
        public decimal DamageFactor { get; set; }

        [JsonProperty("FullyInstalled")]
        public bool FullyInstalled { get; set; }

        [JsonProperty("Index")]
        public Index Index { get; set; }
    }

    public partial class Index
    {
        [JsonProperty("X")]
        public long X { get; set; }

        [JsonProperty("Y")]
        public long Y { get; set; }
    }

    public partial class TypeClass
    {
        [JsonProperty("InventoryType")]
        public string InventoryType { get; set; }
    }

    public partial class Chest10Layout
    {
        [JsonProperty("Slots")]
        public long Slots { get; set; }

        [JsonProperty("Seed")]
        public List<Seed> Seed { get; set; }

        [JsonProperty("Level")]
        public long Level { get; set; }
    }

    public partial class CurrentFreighter
    {
        [JsonProperty("Filename")]
        public string Filename { get; set; }

        [JsonProperty("Seed")]
        public List<Seed> Seed { get; set; }

        [JsonProperty("AltId")]
        public string AltId { get; set; }

        [JsonProperty("ProceduralTexture")]
        public ProceduralTexture ProceduralTexture { get; set; }
    }

    public partial class ProceduralTexture
    {
        [JsonProperty("Samplers")]
        public List<dynamic> Samplers { get; set; }
    }

    public partial class CurrentWeapon
    {
        [JsonProperty("Filename")]
        public string Filename { get; set; }

        [JsonProperty("GenerationSeed")]
        public List<Seed> GenerationSeed { get; set; }
    }

    public partial class Egg
    {
        [JsonProperty("Scale")]
        public decimal Scale { get; set; }

        [JsonProperty("CreatureID")]
        public string CreatureId { get; set; }

        [JsonProperty("Descriptors")]
        public List<dynamic> Descriptors { get; set; }

        [JsonProperty("CreatureSeed")]
        public List<Seed> CreatureSeed { get; set; }

        [JsonProperty("CreatureSecondarySeed")]
        public List<Seed> CreatureSecondarySeed { get; set; }

        [JsonProperty("SpeciesSeed")]
        public long SpeciesSeed { get; set; }

        [JsonProperty("GenusSeed")]
        public long GenusSeed { get; set; }

        [JsonProperty("HhX")]
        public string HhX { get; set; }

        [JsonProperty("Predator")]
        public bool Predator { get; set; }

        [JsonProperty("UA")]
        public long Ua { get; set; }

        [JsonProperty("IaE")]
        public bool IaE { get; set; }

        [JsonProperty("ColourBaseSeed")]
        public List<Seed> ColourBaseSeed { get; set; }

        [JsonProperty("BoneScaleSeed")]
        public List<Seed> BoneScaleSeed { get; set; }

        [JsonProperty("?<V")]
        public bool V { get; set; }

        [JsonProperty("Biome")]
        public Biome Biome { get; set; }

        [JsonProperty("CreatureType")]
        public CreatureType CreatureType { get; set; }

        [JsonProperty("BirthTime")]
        public long BirthTime { get; set; }

        [JsonProperty("LastEggTime")]
        public long LastEggTime { get; set; }

        [JsonProperty("LastTrustIncreaseTime")]
        public long LastTrustIncreaseTime { get; set; }

        [JsonProperty("LastTrustDecreaseTime")]
        public long LastTrustDecreaseTime { get; set; }

        [JsonProperty("EggModified")]
        public bool EggModified { get; set; }

        [JsonProperty("HasBeenSummoned")]
        public bool HasBeenSummoned { get; set; }

        [JsonProperty("CustomName")]
        public string CustomName { get; set; }

        [JsonProperty("Trust")]
        public decimal Trust { get; set; }

        [JsonProperty("SenderData")]
        public SenderData SenderData { get; set; }

        [JsonProperty("Traits")]
        public List<decimal> Traits { get; set; }

        [JsonProperty("Moods")]
        public List<decimal> Moods { get; set; }
    }

    public partial class Biome
    {
        [JsonProperty("Biome")]
        public string BiomeBiome { get; set; }
    }

    public partial class CreatureType
    {
        [JsonProperty("CreatureType")]
        public string CreatureTypeCreatureType { get; set; }
    }

    public partial class FleetFrigate
    {
        [JsonProperty("ResourceSeed")]
        public List<Seed> ResourceSeed { get; set; }

        [JsonProperty("HomeSystemSeed")]
        public List<Seed> HomeSystemSeed { get; set; }

        [JsonProperty("TimeOfLastIncomeCollection")]
        public long TimeOfLastIncomeCollection { get; set; }

        [JsonProperty("CustomName")]
        public string CustomName { get; set; }

        [JsonProperty("FrigateClass")]
        public FrigateClass FrigateClass { get; set; }

        [JsonProperty("Race")]
        public Race Race { get; set; }

        [JsonProperty("TotalNumberOfExpeditions")]
        public long TotalNumberOfExpeditions { get; set; }

        [JsonProperty("TotalNumberOfSuccessfulEvents")]
        public long TotalNumberOfSuccessfulEvents { get; set; }

        [JsonProperty("TotalNumberOfFailedEvents")]
        public long TotalNumberOfFailedEvents { get; set; }

        [JsonProperty("NumberOfTimesDamaged")]
        public long NumberOfTimesDamaged { get; set; }

        [JsonProperty("TraitIDs")]
        public List<string> TraitIDs { get; set; }

        [JsonProperty("Stats")]
        public List<long> Stats { get; set; }

        [JsonProperty("RepairsMade")]
        public long RepairsMade { get; set; }

        [JsonProperty("DamageTaken")]
        public long DamageTaken { get; set; }
    }

    public partial class FrigateClass
    {
        [JsonProperty("FrigateClass")]
        public string FrigateClassFrigateClass { get; set; }
    }

    public partial class Race
    {
        [JsonProperty("AlienRace")]
        public string AlienRace { get; set; }
    }

    public partial class Gqa
    {
        [JsonProperty("20I")]
        public string The20I { get; set; }

        [JsonProperty("UniverseAddress")]
        public long UniverseAddress { get; set; }

        [JsonProperty("Position")]
        public List<decimal> Position { get; set; }

        [JsonProperty("qK9")]
        public long QK9 { get; set; }

        [JsonProperty("d3x")]
        public List<long> D3X { get; set; }

        [JsonProperty("3@T")]
        public List<long> The3T { get; set; }

        [JsonProperty("Name")]
        public string Name { get; set; }

        [JsonProperty("Owner")]
        public SenderData Owner { get; set; }

        [JsonProperty("HMQ")]
        public Hmq Hmq { get; set; }

        [JsonProperty("Xs1")]
        public string Xs1 { get; set; }

        [JsonProperty("Stats")]
        public List<long> Stats { get; set; }

        [JsonProperty("OEf")]
        public List<dynamic> OEf { get; set; }

        [JsonProperty("0Qr")]
        public long The0Qr { get; set; }

        [JsonProperty("OI3")]
        public long Oi3 { get; set; }

        [JsonProperty("g<v")]
        public long GV { get; set; }

        [JsonProperty("HWh")]
        public long HWh { get; set; }

        [JsonProperty("Kvr")]
        public string Kvr { get; set; }

        [JsonProperty("hMW")]
        public long HMw { get; set; }

        [JsonProperty("gEp")]
        public long GEp { get; set; }

        [JsonProperty("abj")]
        public List<Abj> Abj { get; set; }

        [JsonProperty("IsReported")]
        public bool IsReported { get; set; }

        [JsonProperty("hiD")]
        public long HiD { get; set; }

        [JsonProperty(":Qn")]
        public Qn Qn { get; set; }

        [JsonProperty("xru")]
        public long Xru { get; set; }
    }

    public partial class Abj
    {
        [JsonProperty("CZw")]
        public string CZw { get; set; }

        [JsonProperty("6X1")]
        public long The6X1 { get; set; }

        [JsonProperty("Amount")]
        public long Amount { get; set; }
    }

    public partial class Hmq
    {
        [JsonProperty("?SU")]
        public string Su { get; set; }
    }

    public partial class Qn
    {
        [JsonProperty("BuildingClass")]
        public string BuildingClass { get; set; }
    }

    public partial class HoloInteraction
    {
        [JsonProperty("GalacticAddress")]
        public long GalacticAddress { get; set; }

        [JsonProperty("Value")]
        public long Value { get; set; }

        [JsonProperty("Position")]
        public List<decimal> Position { get; set; }
    }

    public partial class HotAction
    {
        [JsonProperty("KeyActions")]
        public List<KeyAction> KeyActions { get; set; }
    }

    public partial class KeyAction
    {
        [JsonProperty("Action")]
        public Action Action { get; set; }

        [JsonProperty("Id")]
        public string Id { get; set; }

        [JsonProperty("Number")]
        public long Number { get; set; }

        [JsonProperty("InventoryIndex")]
        public Index InventoryIndex { get; set; }
    }

    public partial class Action
    {
        [JsonProperty("QuickMenuActions")]
        public string QuickMenuActions { get; set; }
    }

    public partial class KnownWordGroup
    {
        [JsonProperty("Group")]
        public string Group { get; set; }

        [JsonProperty("Races")]
        public List<bool> Races { get; set; }
    }

    public partial class MaintenanceInteraction
    {
        [JsonProperty("InventoryContainer")]
        public Chest10Inventory InventoryContainer { get; set; }

        [JsonProperty("LastUpdateTimestamp")]
        public long LastUpdateTimestamp { get; set; }

        [JsonProperty("LastCompletedTimestamp")]
        public long LastCompletedTimestamp { get; set; }

        [JsonProperty("LastBrokenTimestamp")]
        public long LastBrokenTimestamp { get; set; }

        [JsonProperty("DamageTimers")]
        public List<decimal> DamageTimers { get; set; }

        [JsonProperty("Flags")]
        public long Flags { get; set; }
    }

    public partial class MarkerStack
    {
        [JsonProperty("Table")]
        public long Table { get; set; }

        [JsonProperty("Event")]
        public string Event { get; set; }

        [JsonProperty("GalacticAddress")]
        public GalacticAddressElement GalacticAddress { get; set; }

        [JsonProperty("BuildingSeed")]
        public List<Seed> BuildingSeed { get; set; }

        [JsonProperty("BuildingLocation")]
        public List<double> BuildingLocation { get; set; }

        [JsonProperty("BuildingClass")]
        public Qn BuildingClass { get; set; }

        [JsonProperty("Time")]
        public decimal Time { get; set; }

        [JsonProperty("MissionID")]
        public string MissionId { get; set; }

        [JsonProperty("MissionSeed")]
        public long MissionSeed { get; set; }

        [JsonProperty("ParticipantType")]
        public ParticipantType ParticipantType { get; set; }
    }

    public partial class ParticipantType
    {
        [JsonProperty("ParticipantType")]
        public string ParticipantTypeParticipantType { get; set; }
    }

    public partial class MissionProgress
    {
        [JsonProperty("Mission")]
        public string Mission { get; set; }

        [JsonProperty("Progress")]
        public long Progress { get; set; }

        [JsonProperty("Seed")]
        public long Seed { get; set; }

        [JsonProperty("Data")]
        public long Data { get; set; }

        [JsonProperty("Participants")]
        public List<Participant> Participants { get; set; }
    }

    public partial class Participant
    {
        [JsonProperty("UA")]
        public GalacticAddressElement Ua { get; set; }

        [JsonProperty("BuildingSeed")]
        public List<Seed> BuildingSeed { get; set; }

        [JsonProperty("BuildingLocation")]
        public List<double> BuildingLocation { get; set; }

        [JsonProperty("ParticipantType")]
        public ParticipantType ParticipantType { get; set; }
    }

    public partial class MissionRecurrence
    {
        [JsonProperty("MissionID")]
        public string MissionId { get; set; }

        [JsonProperty("RecurrenceDeadline")]
        public long RecurrenceDeadline { get; set; }
    }

    public partial class MultiTool
    {
        [JsonProperty("Layout")]
        public Chest10Layout Layout { get; set; }

        [JsonProperty("Store")]
        public Chest10Inventory Store { get; set; }

        [JsonProperty("Seed")]
        public List<Seed> Seed { get; set; }

        [JsonProperty("Name")]
        public string Name { get; set; }

        [JsonProperty("IsLarge")]
        public bool IsLarge { get; set; }

        [JsonProperty("PrimaryMode")]
        public long PrimaryMode { get; set; }

        [JsonProperty("SecondaryMode")]
        public long SecondaryMode { get; set; }

        [JsonProperty("UseLegacyColours")]
        public bool UseLegacyColours { get; set; }

        [JsonProperty("Resource")]
        public CurrentFreighter Resource { get; set; }
    }

    public partial class SpawnStateData
    {
        [JsonProperty("PlayerPositionInSystem")]
        public List<double> PlayerPositionInSystem { get; set; }

        [JsonProperty("PlayerTransformAt")]
        public List<double> PlayerTransformAt { get; set; }

        [JsonProperty("ShipPositionInSystem")]
        public List<double> ShipPositionInSystem { get; set; }

        [JsonProperty("ShipTransformAt")]
        public List<double> ShipTransformAt { get; set; }

        [JsonProperty("LastKnownPlayerState")]
        public string LastKnownPlayerState { get; set; }

        [JsonProperty("FreighterPositionInSystem")]
        public List<double> FreighterPositionInSystem { get; set; }

        [JsonProperty("FreighterTransformAt")]
        public List<double> FreighterTransformAt { get; set; }

        [JsonProperty("FreighterTransformUp")]
        public List<double> FreighterTransformUp { get; set; }

        [JsonProperty("AbandonedFreighterPositionInSystem")]
        public List<decimal> AbandonedFreighterPositionInSystem { get; set; }

        [JsonProperty("AbandonedFreighterTransformAt")]
        public List<decimal> AbandonedFreighterTransformAt { get; set; }

        [JsonProperty("AbandonedFreighterTransformUp")]
        public List<decimal> AbandonedFreighterTransformUp { get; set; }
    }

    public partial class NpcWorker
    {
        [JsonProperty("ResourceElement")]
        public CurrentFreighter ResourceElement { get; set; }

        [JsonProperty("InteractionSeed")]
        public List<Seed> InteractionSeed { get; set; }

        [JsonProperty("HiredWorker")]
        public bool HiredWorker { get; set; }

        [JsonProperty("FreighterBase")]
        public bool FreighterBase { get; set; }

        [JsonProperty("BaseUA")]
        public long BaseUa { get; set; }

        [JsonProperty("BaseOffset")]
        public List<double> BaseOffset { get; set; }
    }

    public partial class OtherSideOfPortalReturnBase
    {
        [JsonProperty("UniverseAddress")]
        public UniverseAddress UniverseAddress { get; set; }

        [JsonProperty("Position")]
        public List<double> Position { get; set; }

        [JsonProperty("Facing")]
        public List<double> Facing { get; set; }

        [JsonProperty("TeleporterType")]
        public string TeleporterType { get; set; }

        [JsonProperty("Name")]
        public string Name { get; set; }

        [JsonProperty("CalcWarpOffset")]
        public bool CalcWarpOffset { get; set; }

        [JsonProperty("IsFeatured")]
        public bool IsFeatured { get; set; }
    }

    public partial class PersistentPlayerBasis
    {
        [JsonProperty("BaseVersion")]
        public long BaseVersion { get; set; }

        [JsonProperty("OriginalBaseVersion")]
        public long OriginalBaseVersion { get; set; }

        [JsonProperty("GalacticAddress")]
        public GalacticAddressElement GalacticAddress { get; set; }

        [JsonProperty("Position")]
        public List<double> Position { get; set; }

        [JsonProperty("Forward")]
        public List<double> Forward { get; set; }

        [JsonProperty("UserData")]
        public long UserData { get; set; }

        [JsonProperty("LastUpdateTimestamp")]
        public long LastUpdateTimestamp { get; set; }

        [JsonProperty("Objects")]
        public List<Object> Objects { get; set; }

        [JsonProperty("RID")]
        public string Rid { get; set; }

        [JsonProperty("Owner")]
        public SenderData Owner { get; set; }

        [JsonProperty("Name")]
        public string Name { get; set; }

        [JsonProperty("BaseType")]
        public BaseType BaseType { get; set; }

        [JsonProperty("LastEditedById")]
        public string LastEditedById { get; set; }

        [JsonProperty("LastEditedByUsername")]
        public string LastEditedByUsername { get; set; }

        [JsonProperty("ScreenshotAt")]
        public List<double> ScreenshotAt { get; set; }

        [JsonProperty("ScreenshotPos")]
        public List<double> ScreenshotPos { get; set; }

        [JsonProperty("GameMode")]
        public GameMode GameMode { get; set; }

        [JsonProperty("PlatformToken")]
        public string PlatformToken { get; set; }

        [JsonProperty("IsReported")]
        public bool IsReported { get; set; }

        [JsonProperty("IsFeatured")]
        public bool IsFeatured { get; set; }
    }

    public partial class BaseType
    {
        [JsonProperty("PersistentBaseTypes")]
        public string PersistentBaseTypes { get; set; }
    }

    public partial class GameMode
    {
        [JsonProperty("PresetGameMode")]
        public string PresetGameMode { get; set; }
    }

    public partial class PetAccessoryCustomisation
    {
        [JsonProperty("Data")]
        public List<Datum> Data { get; set; }
    }

    public partial class PhotoModeSettings
    {
        [JsonProperty("Fog")]
        public double Fog { get; set; }

        [JsonProperty("CloudAmount")]
        public decimal CloudAmount { get; set; }

        [JsonProperty("SunDir")]
        public List<decimal> SunDir { get; set; }

        [JsonProperty("FoV")]
        public decimal FoV { get; set; }

        [JsonProperty("0tA")]
        public string The0TA { get; set; }

        [JsonProperty("DepthOfFieldDistance")]
        public decimal DepthOfFieldDistance { get; set; }

        [JsonProperty("DepthOfFieldDistanceSpace")]
        public decimal DepthOfFieldDistanceSpace { get; set; }

        [JsonProperty("HalfFocalPlaneDepth")]
        public decimal HalfFocalPlaneDepth { get; set; }

        [JsonProperty("HalfFocalPlaneDepthSpace")]
        public decimal HalfFocalPlaneDepthSpace { get; set; }

        [JsonProperty("DepthOfFieldPhysConvergence")]
        public decimal DepthOfFieldPhysConvergence { get; set; }

        [JsonProperty("DepthOfFieldPhysAperture")]
        public decimal DepthOfFieldPhysAperture { get; set; }

        [JsonProperty("Vignette")]
        public double Vignette { get; set; }

        [JsonProperty("Filter")]
        public long Filter { get; set; }

        [JsonProperty("FQ3")]
        public double Fq3 { get; set; }
    }

    public partial class RepairTechBuffer
    {
        [JsonProperty("MaintenanceContainer")]
        public MaintenanceInteraction MaintenanceContainer { get; set; }

        [JsonProperty("InventoryType")]
        public long InventoryType { get; set; }

        [JsonProperty("InventorySubIndex")]
        public long InventorySubIndex { get; set; }

        [JsonProperty("InventoryIndex")]
        public Index InventoryIndex { get; set; }
    }

    public partial class Rol
    {
        [JsonProperty("SeasonId")]
        public long SeasonId { get; set; }

        [JsonProperty("StartTimeUTC")]
        public long StartTimeUtc { get; set; }

        [JsonProperty("EndTimeUTC")]
        public long EndTimeUtc { get; set; }

        [JsonProperty("Hash")]
        public long Hash { get; set; }

        [JsonProperty("Title")]
        public string Title { get; set; }

        [JsonProperty("Subtitle")]
        public string Subtitle { get; set; }

        [JsonProperty("Description")]
        public string Description { get; set; }

        [JsonProperty("F=4")]
        public string F4 { get; set; }

        [JsonProperty("Rf8")]
        public string Rf8 { get; set; }

        [JsonProperty("GameMode")]
        public GameMode GameMode { get; set; }

        [JsonProperty("SeasonalUAOverride")]
        public string SeasonalUaOverride { get; set; }

        [JsonProperty("UAOverrideValue")]
        public long UaOverrideValue { get; set; }

        [JsonProperty("FinalReward")]
        public string FinalReward { get; set; }

        [JsonProperty("0bY")]
        public string The0BY { get; set; }

        [JsonProperty("FinalRewardDescription")]
        public string FinalRewardDescription { get; set; }

        [JsonProperty("MainIcon")]
        public MainIcon MainIcon { get; set; }

        [JsonProperty("SeasonNumber")]
        public long SeasonNumber { get; set; }

        [JsonProperty(">CR")]
        public long Cr { get; set; }

        [JsonProperty("oew")]
        public long Oew { get; set; }

        [JsonProperty("SeasonName")]
        public string SeasonName { get; set; }

        [JsonProperty("SeasonNameUpper")]
        public string SeasonNameUpper { get; set; }

        [JsonProperty("MainMissionTitle")]
        public string MainMissionTitle { get; set; }

        [JsonProperty("MainMissionMessage")]
        public string MainMissionMessage { get; set; }

        [JsonProperty("6Mq")]
        public bool The6Mq { get; set; }

        [JsonProperty(">JB")]
        public bool Jb { get; set; }

        [JsonProperty("s2L")]
        public List<dynamic> S2L { get; set; }

        [JsonProperty("StartingSuitSlots")]
        public long StartingSuitSlots { get; set; }

        [JsonProperty("StartingSuitTechSlots")]
        public long StartingSuitTechSlots { get; set; }

        [JsonProperty("StartingSuitCargoSlots")]
        public long StartingSuitCargoSlots { get; set; }

        [JsonProperty("WeaponSeed")]
        public List<Seed> WeaponSeed { get; set; }

        [JsonProperty("ShipSeed")]
        public List<Seed> ShipSeed { get; set; }

        [JsonProperty("ShipType")]
        public ShipType ShipType { get; set; }

        [JsonProperty("StartWithFreighter")]
        public bool StartWithFreighter { get; set; }

        [JsonProperty("FreighterRace")]
        public Race FreighterRace { get; set; }

        [JsonProperty("OMO")]
        public List<dynamic> Omo { get; set; }

        [JsonProperty("WeaponInventoryLayout")]
        public Chest10Layout WeaponInventoryLayout { get; set; }

        [JsonProperty("ShipInventoryLayout")]
        public Chest10Layout ShipInventoryLayout { get; set; }

        [JsonProperty("ShipTechInventoryLayout")]
        public Chest10Layout ShipTechInventoryLayout { get; set; }

        [JsonProperty("UseDefaultAppearance")]
        public bool UseDefaultAppearance { get; set; }

        [JsonProperty("Inventory")]
        public Chest10Inventory Inventory { get; set; }

        [JsonProperty("Inventory_TechOnly")]
        public Chest10Inventory InventoryTechOnly { get; set; }

        [JsonProperty("Inventory_Cargo")]
        public Chest10Inventory InventoryCargo { get; set; }

        [JsonProperty("ShipInventory")]
        public Chest10Inventory ShipInventory { get; set; }

        [JsonProperty("WeaponInventory")]
        public Chest10Inventory WeaponInventory { get; set; }

        [JsonProperty("SDg")]
        public bool SDg { get; set; }

        [JsonProperty("qfQ")]
        public List<dynamic> QfQ { get; set; }

        [JsonProperty(";4P")]
        public List<Egg> The4P { get; set; }

        [JsonProperty("qs?")]
        public List<dynamic> Qs { get; set; }

        [JsonProperty("O?u")]
        public bool OU { get; set; }

        [JsonProperty("7fn")]
        public decimal The7Fn { get; set; }

        [JsonProperty(";MW")]
        public decimal Mw { get; set; }

        [JsonProperty("StartNextToShip")]
        public bool StartNextToShip { get; set; }

        [JsonProperty("DistanceFromShipAtStartOfGame")]
        public decimal DistanceFromShipAtStartOfGame { get; set; }

        [JsonProperty("ShipStartsDamaged")]
        public bool ShipStartsDamaged { get; set; }

        [JsonProperty("AllowMissionDetailMessages")]
        public bool AllowMissionDetailMessages { get; set; }

        [JsonProperty("EG=")]
        public bool Eg { get; set; }

        [JsonProperty("apf")]
        public string Apf { get; set; }

        [JsonProperty("sti")]
        public bool Sti { get; set; }

        [JsonProperty("Pqk")]
        public long Pqk { get; set; }

        [JsonProperty("5PB")]
        public bool The5Pb { get; set; }

        [JsonProperty("pxy")]
        public long Pxy { get; set; }

        [JsonProperty("iBI")]
        public List<dynamic> IBi { get; set; }

        [JsonProperty("ho8")]
        public bool Ho8 { get; set; }

        [JsonProperty("4Os")]
        public decimal The4Os { get; set; }

        [JsonProperty("q5B")]
        public long Q5B { get; set; }

        [JsonProperty("Stages")]
        public List<dynamic> Stages { get; set; }

        [JsonProperty("ScanEventTable")]
        public ScanEventTable ScanEventTable { get; set; }

        [JsonProperty("33J")]
        public bool The33J { get; set; }

        [JsonProperty("<jc")]
        public List<dynamic> Jc { get; set; }

        [JsonProperty("mVE")]
        public bool MVe { get; set; }
    }

    public partial class MainIcon
    {
        [JsonProperty("Filename")]
        public string Filename { get; set; }
    }

    public partial class ScanEventTable
    {
        [JsonProperty("Events")]
        public List<dynamic> Events { get; set; }
    }

    public partial class ShipType
    {
        [JsonProperty("ShipClass")]
        public string ShipClass { get; set; }
    }

    public partial class S5O
    {
        [JsonProperty(">r:")]
        public CurrentFreighter R { get; set; }

        [JsonProperty(":dY")]
        public CurrentFreighter DY { get; set; }

        [JsonProperty("=bJ")]
        public long BJ { get; set; }

        [JsonProperty("yDG")]
        public long YDg { get; set; }
    }

    public partial class SavedInteractionDialogTable
    {
        [JsonProperty("Hash")]
        public string Hash { get; set; }

        [JsonProperty("Dialog")]
        public string Dialog { get; set; }
    }

    public partial class SavedInteractionIndicy
    {
        [JsonProperty("SavedRaceIndicies")]
        public List<long> SavedRaceIndicies { get; set; }
    }

    public partial class SeasonState
    {
        [JsonProperty("MilestoneValues")]
        public List<dynamic> MilestoneValues { get; set; }

        [JsonProperty("RewardCollected")]
        public List<dynamic> RewardCollected { get; set; }

        [JsonProperty("PinnedStage")]
        public long PinnedStage { get; set; }

        [JsonProperty("PinnedMilestone")]
        public long PinnedMilestone { get; set; }

        [JsonProperty("RendezvousUAs")]
        public List<dynamic> RendezvousUAs { get; set; }

        [JsonProperty("HasCollectedFinalReward")]
        public bool HasCollectedFinalReward { get; set; }

        [JsonProperty("ProtectedEvents")]
        public List<dynamic> ProtectedEvents { get; set; }

        [JsonProperty("BZY")]
        public Bzy Bzy { get; set; }
    }

    public partial class Bzy
    {
        [JsonProperty("J=T")]
        public string JT { get; set; }
    }

    public partial class ShipOwnership
    {
        [JsonProperty("Name")]
        public string Name { get; set; }

        [JsonProperty("Resource")]
        public CurrentFreighter Resource { get; set; }

        [JsonProperty("Inventory")]
        public Chest10Inventory Inventory { get; set; }

        [JsonProperty("Inventory_Cargo")]
        public Chest10Inventory InventoryCargo { get; set; }

        [JsonProperty("Inventory_TechOnly")]
        public Chest10Inventory InventoryTechOnly { get; set; }

        [JsonProperty("InventoryLayout")]
        public Chest10Layout InventoryLayout { get; set; }

        [JsonProperty("Location")]
        public long Location { get; set; }

        [JsonProperty("Position")]
        public List<decimal> Position { get; set; }

        [JsonProperty("Direction")]
        public List<decimal> Direction { get; set; }
    }

    public partial class StartingAryWeapon
    {
        [JsonProperty("WeaponMode")]
        public string WeaponMode { get; set; }
    }

    public partial class PlayerStateDataStat
    {
        [JsonProperty("GroupId")]
        public string GroupId { get; set; }

        [JsonProperty("Address")]
        public GalacticAddressElement Address { get; set; }

        [JsonProperty("Stats")]
        public List<StatStat> Stats { get; set; }
    }

    public partial class StatStat
    {
        [JsonProperty("Id")]
        public string Id { get; set; }

        [JsonProperty("Value")]
        public Value Value { get; set; }
    }

    public partial class Value
    {
        [JsonProperty("IntValue", NullValueHandling = NullValueHandling.Ignore)]
        public long? IntValue { get; set; }

        [JsonProperty("FloatValue", NullValueHandling = NullValueHandling.Ignore)]
        public double? FloatValue { get; set; }
    }

    public partial class StoredInteraction
    {
        [JsonProperty("Interactions")]
        public List<Interaction> Interactions { get; set; }

        [JsonProperty("CurrentPos")]
        public long CurrentPos { get; set; }
    }

    public partial class Interaction
    {
        [JsonProperty("GalacticAddress")]
        public GalacticAddressElement GalacticAddress { get; set; }

        [JsonProperty("Value")]
        public long Value { get; set; }

        [JsonProperty("Position")]
        public List<double> Position { get; set; }
    }

    public partial class TelemetryStat
    {
        [JsonProperty("Id")]
        public string Id { get; set; }

        [JsonProperty("Type")]
        public string Type { get; set; }

        [JsonProperty("Value")]
        public long Value { get; set; }
    }

    public partial class TerrainEditData
    {
        [JsonProperty("GalacticAddresses")]
        public List<GalacticAddressElement> GalacticAddresses { get; set; }

        [JsonProperty("BufferSizes")]
        public List<long> BufferSizes { get; set; }

        [JsonProperty("BufferAges")]
        public List<long> BufferAges { get; set; }

        [JsonProperty("BufferAnchors")]
        public List<List<double>> BufferAnchors { get; set; }

        [JsonProperty("BufferProtected")]
        public List<bool> BufferProtected { get; set; }

        [JsonProperty("Edits")]
        public List<Edit> Edits { get; set; }
    }

    public partial class Edit
    {
        [JsonProperty("Data")]
        public long Data { get; set; }

        [JsonProperty("Position")]
        public long Position { get; set; }
    }

    public partial class TradingSupplyDatum
    {
        [JsonProperty("GalacticAddress")]
        public string GalacticAddress { get; set; }

        [JsonProperty("Supply")]
        public double Supply { get; set; }

        [JsonProperty("Demand")]
        public decimal Demand { get; set; }

        [JsonProperty("Product")]
        public string Product { get; set; }

        [JsonProperty("Timestamp")]
        public long Timestamp { get; set; }
    }

    public partial class VehicleOwnership
    {
        [JsonProperty("Name")]
        public string Name { get; set; }

        [JsonProperty("Resource")]
        public CurrentFreighter Resource { get; set; }

        [JsonProperty("Inventory")]
        public Chest10Inventory Inventory { get; set; }

        [JsonProperty("Inventory_Cargo")]
        public Chest10Inventory InventoryCargo { get; set; }

        [JsonProperty("Inventory_TechOnly")]
        public Chest10Inventory InventoryTechOnly { get; set; }

        [JsonProperty("InventoryLayout")]
        public Chest10Layout InventoryLayout { get; set; }

        [JsonProperty("Location")]
        public GalacticAddressElement Location { get; set; }

        [JsonProperty("Position")]
        public List<double> Position { get; set; }

        [JsonProperty("Direction")]
        public List<double> Direction { get; set; }
    }

    public partial class VisitedPortal
    {
        [JsonProperty("PortalSeed")]
        public List<Seed> PortalSeed { get; set; }

        [JsonProperty("LastPortalUA")]
        public string LastPortalUa { get; set; }

        [JsonProperty("IsStoryPortal")]
        public bool IsStoryPortal { get; set; }
    }

    public partial struct GalacticAddressElement
    {
        public long? Integer;
        public string String;

        public static implicit operator GalacticAddressElement(long Integer) => new GalacticAddressElement { Integer = Integer };
        public static implicit operator GalacticAddressElement(string String) => new GalacticAddressElement { String = String };
    }

    public partial struct Seed
    {
        public bool? Bool;
        public string String;

        public static implicit operator Seed(bool Bool) => new Seed { Bool = Bool };
        public static implicit operator Seed(string String) => new Seed { String = String };
    }

    public partial class GameSaveData
    {
        public static GameSaveData FromJson(string json) => JsonConvert.DeserializeObject<GameSaveData>(json, global::NMSCoordinates.SaveData.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this GameSaveData self, PlayerStateData playerStateData) => JsonConvert.SerializeObject(self, global::NMSCoordinates.SaveData.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            NullValueHandling = NullValueHandling.Include,
            MissingMemberHandling = MissingMemberHandling.Ignore,
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Formatting = Formatting.None,
            Converters =
            {
                GalacticAddressElementConverter.Singleton,
                SeedConverter.Singleton,
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }

    internal class GalacticAddressElementConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(GalacticAddressElement) || t == typeof(GalacticAddressElement?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            switch (reader.TokenType)
            {
                case JsonToken.Integer:
                    var integerValue = serializer.Deserialize<long>(reader);
                    return new GalacticAddressElement { Integer = integerValue };
                case JsonToken.String:
                case JsonToken.Date:
                    var stringValue = serializer.Deserialize<string>(reader);
                    return new GalacticAddressElement { String = stringValue };
            }
            throw new Exception("Cannot unmarshal type GalacticAddressElement");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            var value = (GalacticAddressElement)untypedValue;
            if (value.Integer != null)
            {
                serializer.Serialize(writer, value.Integer.Value);
                return;
            }
            if (value.String != null)
            {
                serializer.Serialize(writer, value.String);
                return;
            }
            throw new Exception("Cannot marshal type GalacticAddressElement");
        }

        public static readonly GalacticAddressElementConverter Singleton = new GalacticAddressElementConverter();
    }

    internal class SeedConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Seed) || t == typeof(Seed?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            switch (reader.TokenType)
            {
                case JsonToken.Boolean:
                    var boolValue = serializer.Deserialize<bool>(reader);
                    return new Seed { Bool = boolValue };
                case JsonToken.String:
                case JsonToken.Date:
                    var stringValue = serializer.Deserialize<string>(reader);
                    return new Seed { String = stringValue };
            }
            throw new Exception("Cannot unmarshal type Seed");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            var value = (Seed)untypedValue;
            if (value.Bool != null)
            {
                serializer.Serialize(writer, value.Bool.Value);
                return;
            }
            if (value.String != null)
            {
                serializer.Serialize(writer, value.String);
                return;
            }
            throw new Exception("Cannot marshal type Seed");
        }

        public static readonly SeedConverter Singleton = new SeedConverter();
    }
}
