// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var nms = Nms.FromJson(jsonString);

namespace NMSCoordinates.ufSaveData
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class GameSaveData
    {
        [JsonProperty("F2P")]
        public long Version { get; set; }

        [JsonProperty("8>q")]
        public string Platform { get; set; }

        [JsonProperty("6f=")]
        public PlayerStateData PlayerStateData { get; set; }

        [JsonProperty("rnc")]
        public SpawnStateData SpawnStateData { get; set; }
    }

    public partial class PlayerStateData
    {
        [JsonProperty("yhJ")]
        public UniverseAddress UniverseAddress { get; set; }

        [JsonProperty("ux@")]
        public UniverseAddress PreviousUniverseAddress { get; set; }

        [JsonProperty("QQp")]
        public long HomeRealityIteration { get; set; }

        [JsonProperty("nlG")]
        public TeleportEndpoints[] TeleportEndpoints { get; set; }

        [JsonProperty("DaC")]
        public bool OnOtherSideOfPortal { get; set; }

        [JsonProperty("NQJ")]
        public VisitedPortal VisitedPortal { get; set; }

        [JsonProperty("F?0")]
        public PersistentPlayerBases[] PersistentPlayerBases { get; set; }

        [JsonProperty("05J")]
        public long TimeLastSpaceBattle { get; set; }

        [JsonProperty("8br")]
        public long WarpsLastSpaceBattle { get; set; }

        [JsonProperty("8xx")]
        public long ActiveSpaceBattleUA { get; set; }

        [JsonProperty("IRi")]
        public long TimeLastMiniStation { get; set; }

        [JsonProperty("x=M")]
        public long WarpsLastMiniStation { get; set; }
    }

    public partial class UniverseAddress
    {
        [JsonProperty("Iis")]
        public long RealityIndex { get; set; }

        [JsonProperty("oZw")]
        public GalacticAddress GalacticAddress { get; set; }
    }

    public partial class GalacticAddress
    {
        [JsonProperty("dZj")]
        public long VoxelX { get; set; }

        [JsonProperty("IyE")]
        public long VoxelY { get; set; }

        [JsonProperty("uXE")]
        public long VoxelZ { get; set; }

        [JsonProperty("vby")]
        public long SolarSystemIndex { get; set; }

        [JsonProperty("jsv")]
        public long PlanetIndex { get; set; }
    }

    public partial class VisitedPortal
    {
        [JsonProperty("3fO")]
        public PortalSeed[] PortalSeed { get; set; }

        [JsonProperty("K:U")]
        public string LastPortalUA { get; set; }

        [JsonProperty("oEc")]
        public bool IsStoryPortal { get; set; }
    }

    public partial struct PortalSeed
    {
        public bool? Bool;
        public string String;

        public static implicit operator PortalSeed(bool Bool) => new PortalSeed { Bool = Bool };
        public static implicit operator PortalSeed(string String) => new PortalSeed { String = String };
    }

    public partial class PersistentPlayerBases
    {
        [JsonProperty("oZw")]
        public string GalacticAddress { get; set; }

        [JsonProperty("NKm")]
        public string Name { get; set; }
    }
    public partial class TeleportEndpoints
    {
        [JsonProperty("yhJ")]
        public UniverseAddress UniverseAddress { get; set; }

        [JsonProperty("wMC")]
        public double[] Position { get; set; }

        [JsonProperty("gk4")]
        public double[] Facing { get; set; }

        [JsonProperty("iAF")]
        public string TeleporterType { get; set; }

        [JsonProperty("NKm")]
        public string Name { get; set; }

        [JsonProperty("a>;")]
        public bool CalcWarpOffset { get; set; }
    }

    public partial class SpawnStateData
    {
        [JsonProperty("mEH")]
        public double[] PlayerPositionInSystem { get; set; }

        [JsonProperty("l2U")]
        public double[] PlayerTransformAt { get; set; }

        [JsonProperty("tnP")]
        public double[] ShipPositionInSystem { get; set; }

        [JsonProperty("l4H")]
        public double[] ShipTransformAt { get; set; }

        [JsonProperty("jk4")]
        public string LastKnownPlayerState { get; set; }

        [JsonProperty("NGn")]
        public double[] FreighterPositionInSystem { get; set; }

        [JsonProperty("uAt")]
        public double[] FreighterTransformAt { get; set; }

        [JsonProperty("uAt")]
        public double[] FreighterTransformUp { get; set; }
    }

    public partial class GameSaveData
    {
        public static GameSaveData FromJson(string json) => JsonConvert.DeserializeObject<GameSaveData>(json, NMSCoordinates.SaveData.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this GameSaveData self) => JsonConvert.SerializeObject(self, NMSCoordinates.SaveData.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            NullValueHandling = NullValueHandling.Ignore,
            MissingMemberHandling = MissingMemberHandling.Ignore,
            Formatting = Formatting.None,
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
